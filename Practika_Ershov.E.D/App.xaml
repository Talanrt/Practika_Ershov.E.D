<Application x:Class="Practika_Ershov.E.D.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Practika_Ershov.E.D"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             Startup="ApplicationStart">
    <Application.Resources>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <ControlTemplate.Resources>
                            <SolidColorBrush x:Key="fillBrush">MediumSeaGreen</SolidColorBrush>
                            <SolidColorBrush x:Key="borderBrush">Gray</SolidColorBrush>
                        </ControlTemplate.Resources>
                        <Grid  Background="Transparent" SnapsToDevicePixels="True"
                           Height="18"  
                           >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="34" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid  x:Name="markGrid" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Fill="Transparent" Height="16" x:Name="moveEllipse"
                                       >
                                    <Rectangle.Style>
                                        <Style TargetType="Rectangle">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation From="0" To="16" Duration="0:0:0.4" 
                                              Storyboard.TargetProperty="Width" />
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard>
                                                            <Storyboard>
                                                                <DoubleAnimation To="0" Duration="0:0:0.4" 
                                                         Storyboard.TargetProperty="Width"/>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                                <Rectangle RadiusX="6" RadiusY="6" 
                                       Grid.ColumnSpan="2"
                                       Name="line"
                                       StrokeThickness=".8"
                                       IsHitTestVisible="False"
                                       Margin="1,4,1,4"
                                 >
                                    <Rectangle.Style>
                                        <Style TargetType="{x:Type Rectangle}">
                                            <Setter Property="Fill" Value="LightGray"/>
                                        </Style>
                                    </Rectangle.Style>
                                </Rectangle>
                                <Ellipse Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                     StrokeThickness=".8"
                                     Name="spot"
                                     Grid.Column="1"
                                     HorizontalAlignment="Left"
                                     >
                                    <Ellipse.Style>
                                        <Style TargetType="Ellipse">
                                            <Setter Property="Fill" Value="MediumSeaGreen"/>
                                            <Setter Property="Stroke" Value="MediumSeaGreen"/>
                                        </Style>
                                    </Ellipse.Style>
                                </Ellipse>

                            </Grid>
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="line" Value="DarkGray"/>
                                <Setter Property="Stroke" TargetName="spot" Value="DarkGray"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity"  Value=".5"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Stroke" TargetName="line" Value="Black"/>
                                <Setter Property="Stroke" TargetName="spot" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Fill" TargetName="line" Value="MediumSeaGreen"/>
                                <Setter Property="Fill" TargetName="spot" Value="DimGray"/>
                                <Setter Property="Stroke" TargetName="spot" Value="MediumSeaGreen"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Fill" TargetName="line" Value="lightGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="topButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#6e7783"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="50">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#dcdcdc"/>

                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MenuBtn" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Margin" Value="15 3"/>
            <Setter Property="FontSize" Value="13"/>
           
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="7">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="MediumSlateBlue"/>

                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="menuBtnIcon" TargetType="Icon:PackIconMaterial">
            <Setter Property="Width" Value="15"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="20 2 20 0"/>
        </Style>
    </Application.Resources>
</Application>
